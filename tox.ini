[tox]
min_version = 4.11
env_list =
    eslint
    stylelint
    npm-audit
    flake8
    bandit
    pip-audit
    coverage
    djlint
labels =
    test = coverage
    dependency-tree = pipdeptree
    linter = flake8, eslint, stylelint, djlint
    sbom = pip-audit-sbom, npm-sbom
    security = bandit, npm-audit, pip-audit

no_package = True

# some base configs
[base]
deps =
    -r requirements/test.txt
changedir =
    jbl_chat

[base-changedir-js]
changedir =
    jbl_chat/chat/static

[testenv]
pass_env = *

# eslint
[testenv:eslint]
skip_install = True
description = 'Running eslint'
allowlist_externals =
    npm
    rm
commands_pre =
    npm install
commands =
    npm run eslint
commands_post =
    rm -rf node_modules
changedir =
    {[base-changedir-js]changedir}

# stylelint
[testenv:stylelint]
skip_install = True
description = 'Running stylelint'
allowlist_externals =
    npm
    rm
commands_pre =
    npm install
commands =
    npm run stylelint
commands_post =
    rm -rf node_modules
changedir =
    {[base-changedir-js]changedir}


# npm audit
[testenv:npm-audit]
skip_install = True
description = 'Running npm audit'
allowlist_externals =
    npm
    rm
commands_pre =
    npm install
commands =
    npm run npmAudit
commands_post =
    rm -rf node_modules
changedir =
    {[base-changedir-js]changedir}

# npm SBOM
[testenv:npm-sbom]
skip_install = True
description = 'Running npm sbom'
allowlist_externals =
    npm
    rm
commands_pre =
    npm install
commands =
    npm run npmSBOM
commands_post =
    rm -rf node_modules
changedir =
    {[base-changedir-js]changedir}

# bandit
[testenv:bandit]
skip_install = True
description = "Running bandit analysis"
deps =
    bandit>=1.7.5
commands = bandit --ini tox.ini -o {env:outputFileBandit:bandit.xml}

# flake8
[testenv:flake8]
skip_install = True
description = 'Running flake8 linter'
deps =
    flake8
    flake8-django
commands = flake8 --format {env:FLAKE8_FORMAT:default} --output-file {env:outputFileFlake:''}

[testenv:pipdeptree]
allowlist_externals =
    graphviz
    bash
deps =
    -r requirements/base-test.txt
    pipdeptree
    graphviz
commands =
    bash -c "pipdeptree -l --exclude pip,tox,pipdeptree,wheel,graphviz,setuptools > {env:outputFilePipDepTreeText:/dev/stdout}"
    bash -c "pipdeptree -l --exclude pip,tox,pipdeptree,wheel,graphviz,setuptools --graph-output png > {env:outputFilePipDepTreeGraph:dependencies.png}"

# pip audit
[testenv:pip-audit]
description = "Running pip audit"
deps =
    {[base]deps}
    pip-audit>=2.6.1
commands =
    pip-audit -l -f {env:PIP_AUDIT_FORMAT:columns} -o {env:outputFilePipAuditJson:stdout}

[testenv:pip-audit-sbom]
description = {[testenv:pip-audit]description}
deps =
    pip-audit>=2.6.1
commands = pip-audit -l -f cyclonedx-xml -o {env:outputFilePipAudit:pip_audit.xml}


# unit testing and integration
[testenv:coverage]
description = "Running tests with coverage info"
deps =
    {[base]deps}
    coverage==7.9.2
commands =
    coverage run -a manage.py test --settings={env:DJANGO_SETTINGS_MODULE:jbl_chat.settings.test}
    coverage html
changedir =
    {[base]changedir}

# djlint
[testenv:djlint]
deps =
    djlint
commands =
    djlint . --profile=django --lint --extend-exclude "./htmlcov"

# TOOLS CONFIGURATION #

# bandit configuration
[bandit]
targets = .
format = xml
exclude = **/tests/**,**/site-packages/**,**/node_modules/**
recursive = true

# flake8 configuration
[flake8]
skip_install = True
extend-ignore = E501, E128, W391, E127, E302, E303, W293, W292, DJ08
exclude =
    tests,
    node_modules,
    features,
    steps,
    migrations,
    settings,
    build,
    dist,
    .tox,
    */asgi/*

# coverage default configuration
[coverage:run]
omit =
    */tests/*
    */migrations/*
context = unittest

[coverage:report]
omit =
    */tests/*
    */migrations/*
    */settings/*
    */features/*
exclude_lines =
    pragma: no cover
    if settings.DEBUG
fail_under = 80

[coverage:html]
show_contexts = on